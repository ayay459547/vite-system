@use 'sass:color';

$form-danger: #f56c6c;

@mixin validate-error() {
  box-shadow: 0 0 0 1px $form-danger inset;
  background-color: color.adjust($form-danger, $lightness: 20%);
}

@mixin form-success($type) {
  :deep(div[class*="#{$type}"]) {
    width: 100%;
    height: fit-content;

    @if ($type == FormInput or $type == FormAutocomplete) {
      .el-input__suffix {
        position: absolute;
        right: 8px;
        top: 0px;
      }
      .el-input-group__prepend,
      .el-input-group__append {
        padding: 0 12px;
      }

    } @else if ($type == FormDatePicker or $type == FormTimePicker) {
      border-radius: 4px;
    }

    .el-input__wrapper,
    .el-date-editor,
    .is-filterable,
    .el-select__wrapper {
      transition-duration: 0.3s;
      position: relative;
    }
  }
}

@mixin form-error($type) {
  :deep(div[class*="#{$type}"]) {
    .el-input__wrapper,
    .el-input-group__prepend,
    .el-input-group__append,
    .is-filterable,
    .el-select__wrapper,
    .el-checkbox__inner,
    .el-radio__inner {
      @include validate-error();
    }

    .el-radio.is-bordered {
      border: 1px solid $form-danger;
    }
    .el-radio-button__inner {
      border: 1px solid $form-danger;
      background-color: color.adjust($form-danger, $lightness: 20%);
    }
  }

  :deep(.el-input-group) {
    box-shadow: none !important;
  }

  @if ($type == FormDatePicker or $type == FormTimePicker) {
    :deep(.el-date-editor) {
      @include validate-error();
    }
  }
}
